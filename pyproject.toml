[build-system]
requires = ["hatchling>=1.26"]
build-backend = "hatchling.build"

[project]
name = "ops0"
version = "0.1.0"
description = "Python-Native ML Pipeline Orchestration"
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
authors = [
    {name = "ops0 Team", email = "hello@ops0.xyz"},
]
keywords = ["mlops", "machine-learning", "pipelines", "automation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "docker>=6.0.0",
    "kubernetes>=28.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.urls]
Homepage = "https://ops0.xyz"
Documentation = "https://docs.ops0.xyz"
Repository = "https://github.com/ops0-mlops/ops0"
Issues = "https://github.com/ops0-mlops/ops0/issues"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "bump2version>=1.0.0",
]
ml = [
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "tensorflow>=2.13.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
]
cloud = [
    "boto3>=1.28.0",
    "google-cloud-storage>=2.10.0",
    "azure-storage-blob>=12.17.0",
]
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-client>=3.5.0",
    "sentry-sdk>=1.32.0",
]

[project.scripts]
ops0 = "ops0.cli.main:app"

[tool.hatch.version]
path = "src/ops0/__about__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=ops0",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--strict-markers",
    "--strict-config",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true