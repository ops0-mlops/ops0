[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ops0"
version = "0.1.0"
description = "Write Python, Ship Production - Zero-configuration MLOps platform"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "ops0 Contributors", email = "hello@ops0.xyz"},
]
maintainers = [
    {name = "ops0 Team", email = "team@ops0.xyz"},
]
keywords = ["mlops", "machine-learning", "pipeline", "deployment", "automation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "click>=8.0",
    "cloudpickle>=2.0",
    "jinja2>=3.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.0",
    "black>=22.0",
    "isort>=5.0",
    "ruff>=0.0.280",
]
ml = [
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
]
aws = [
    "boto3>=1.26.0",
    "aws-cdk-lib>=2.100.0",
]
all = [
    "ops0[dev,ml,aws]",
]

[project.urls]
Homepage = "https://github.com/ops0-mlops/ops0"
Documentation = "https://docs.ops0.xyz"
Repository = "https://github.com/ops0-mlops/ops0.git"
"Bug Tracker" = "https://github.com/ops0-mlops/ops0/issues"

[project.scripts]
ops0 = "ops0.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["ops0*"]
exclude = ["tests*", "examples*"]

[tool.setuptools.package-data]
"ops0.cdk.templates" = ["*.j2", "*.py.j2"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["ops0"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]