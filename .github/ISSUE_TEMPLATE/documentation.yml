name: üìö Documentation Issue
description: Report issues with documentation or request documentation improvements
title: "[Docs]: "
labels: ["documentation", "needs-review"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        Thanks for helping us improve ops0 documentation! üìñ
        
        Good documentation is essential for developer experience. Your feedback helps us make ops0 more accessible to everyone.

  - type: dropdown
    id: doc-type
    attributes:
      label: üìñ Documentation Type
      description: What type of documentation issue is this?
      options:
        - "Missing documentation"
        - "Incorrect/outdated information"
        - "Unclear explanation"
        - "Missing examples"
        - "Broken links"
        - "Typos/grammar"
        - "API documentation"
        - "Tutorial/guide request"
        - "Translation issue"
        - "Accessibility issue"
        - "Other"
    validations:
      required: true

  - type: textarea
    id: issue-description
    attributes:
      label: üìù Issue Description
      description: Clearly describe the documentation issue
      placeholder: "The documentation for @ops0.step decorator doesn't explain how to handle errors..."
    validations:
      required: true

  - type: textarea
    id: current-documentation
    attributes:
      label: üìÑ Current Documentation
      description: |
        What does the current documentation say? (Copy/paste relevant sections)
        Include the URL where you found this information.
      placeholder: |
        URL: https://docs.ops0.xyz/api/decorators
        
        Current text:
        "The @ops0.step decorator automatically handles..."
        
        What's wrong:
        - Doesn't mention error handling
        - Example is incomplete
        - Missing parameter explanations
    validations:
      required: false

  - type: textarea
    id: expected-documentation
    attributes:
      label: ‚úÖ What Should Be Documented
      description: What information should be included or how should it be improved?
      placeholder: |
        The documentation should include:
        - How to handle errors in @ops0.step functions
        - Complete example with error handling
        - Explanation of all parameters
        - Best practices for error recovery
    validations:
      required: true

  - type: dropdown
    id: target-audience
    attributes:
      label: üë• Target Audience
      description: Who is the primary audience for this documentation?
      options:
        - "Complete beginners to ops0"
        - "Python developers new to MLOps"
        - "MLOps engineers"
        - "Data scientists"
        - "DevOps/Platform engineers"
        - "API developers"
        - "Contributors/developers"
        - "Enterprise users"
        - "All users"
    validations:
      required: true

  - type: dropdown
    id: doc-section
    attributes:
      label: üìÇ Documentation Section
      description: Which section of the documentation is this about?
      options:
        - "Getting Started"
        - "Tutorial/Quickstart"
        - "API Reference"
        - "User Guide"
        - "Examples"
        - "Best Practices"
        - "Troubleshooting"
        - "Deployment Guide"
        - "Contributing Guide"
        - "Migration Guide"
        - "FAQ"
        - "CLI Reference"
        - "Integration Guides"
        - "Security Guide"
        - "Performance Guide"
        - "Other"
    validations:
      required: true

  - type: textarea
    id: suggested-content
    attributes:
      label: ‚úèÔ∏è Suggested Content
      description: |
        If you have suggestions for how to improve the documentation, please share them!
        You can include draft text, code examples, or structural suggestions.
      placeholder: |
        Suggested content:
        
        ## Error Handling in ops0 Steps
        
        ```python
        @ops0.step
        def robust_step(data):
            try:
                result = process_data(data)
                return result
            except ValidationError as e:
                # Handle validation errors
                ops0.logging.error(f"Validation failed: {e}")
                raise ops0.StepError("Data validation failed")
            except Exception as e:
                # Handle unexpected errors
                ops0.logging.error(f"Unexpected error: {e}")
                raise
        ```
        
        Key points to explain:
        - When to use try/catch in steps
        - How ops0 handles different exception types
        - Best practices for error logging
      render: markdown
    validations:
      required: false

  - type: textarea
    id: code-examples
    attributes:
      label: üß™ Code Examples Needed
      description: |
        What code examples would help illustrate the concept?
      placeholder: |
        Examples needed:
        1. Basic error handling in @ops0.step
        2. Custom error types and recovery
        3. Logging best practices
        4. Integration with external error tracking
        
        ```python
        # Example of what would be helpful
        @ops0.step
        def example_with_errors():
            # Show common patterns
            pass
        ```
      render: python
    validations:
      required: false

  - type: checkboxes
    id: documentation-improvements
    attributes:
      label: üìà Documentation Improvements Needed
      description: What types of improvements would help? (Check all that apply)
      options:
        - label: "More detailed explanations"
        - label: "Step-by-step tutorials"
        - label: "Real-world examples"
        - label: "Code snippets"
        - label: "Visual diagrams/screenshots"
        - label: "Video tutorials"
        - label: "Interactive examples"
        - label: "Better organization/structure"
        - label: "Search functionality"
        - label: "Cross-references and links"
        - label: "Troubleshooting guides"
        - label: "Performance tips"

  - type: dropdown
    id: urgency
    attributes:
      label: ‚è∞ Urgency
      description: How urgent is this documentation improvement?
      options:
        - "üî• Critical - Blocking users from getting started"
        - "üìà High - Frequently needed information"
        - "üìä Medium - Would improve user experience"
        - "üéÅ Low - Nice to have improvement"
    validations:
      required: true

  - type: textarea
    id: user-story
    attributes:
      label: üë§ User Story
      description: |
        Help us understand the user perspective. When would someone need this documentation?
      placeholder: |
        As a data scientist new to ops0, I want to understand how to handle errors in my pipeline steps so that I can build robust ML pipelines that gracefully handle failures.
        
        Current pain points:
        - I don't know how to catch and handle errors
        - My pipelines fail without clear error messages
        - I'm not sure what exceptions ops0 provides
    validations:
      required: false

  - type: textarea
    id: related-docs
    attributes:
      label: üîó Related Documentation
      description: |
        Are there other documentation pages or external resources that relate to this issue?
      placeholder: |
        Related pages:
        - https://docs.ops0.xyz/api/logging
        - https://docs.ops0.xyz/best-practices/reliability
        
        External references:
        - Similar patterns in other tools
        - Relevant Python documentation
    validations:
      required: false

  - type: dropdown
    id: contribution-willingness
    attributes:
      label: ü§ù Contribution Interest
      description: Would you be interested in helping improve this documentation?
      options:
        - "Yes, I'd like to write the documentation"
        - "Yes, I can help review and provide feedback"
        - "Yes, I can provide examples and use cases"
        - "Maybe, depending on the scope"
        - "No, just reporting the issue"
    validations:
      required: false

  - type: textarea
    id: additional-context
    attributes:
      label: üìù Additional Context
      description: |
        Any other information that would help us improve the documentation
      placeholder: |
        - Screenshots of confusing sections
        - Links to good documentation examples from other projects
        - Specific user scenarios where this documentation is needed
        - Feedback from team members or community
    validations:
      required: false

  - type: checkboxes
    id: terms
    attributes:
      label: ‚úÖ Checklist
      description: Please confirm the following
      options:
        - label: "I have searched existing documentation issues"
          required: true
        - label: "I have checked the current documentation at docs.ops0.xyz"
          required: true
        - label: "I have clearly described what's missing or incorrect"
          required: true
        - label: "I understand this may take time to implement"
          required: true